name: CI
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ windows-latest ]
        os: [ aigio-win10ltsc-vm ]

    steps:
      - name: Checkout repository
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          
      - name: Checkout repository(BD.Git.Checkout.Tools)
        if: ${{ matrix.os == 'aigio-win10ltsc-vm' }}
        run: C:\actions-runner\checkout.exe ${{ github.workspace }} ${{ github.sha }} ${{ github.repositoryUrl }}

      - name: Setup .NET
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Verify dotnet info
        run: dotnet --info

      - name: Test
        run: dotnet test -c Release

  build:
    name: Build
    needs: [ test ]
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ windows-latest ]
        os: [ aigio-win10ltsc-vm ]
        include:
          - ProjectName: "WinAuth"
            PackageId: "WinAuth.Library"

    steps:
      - name: Checkout repository
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          
      - name: Checkout repository(BD.Git.Checkout.Tools)
        if: ${{ matrix.os == 'aigio-win10ltsc-vm' }}
        run: C:\actions-runner\checkout.exe ${{ github.workspace }} ${{ github.sha }} ${{ github.repositoryUrl }}

      - name: Setup .NET
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Verify dotnet info
        run: dotnet --info

      - name: Build
        run: dotnet build -c Release src\${{ matrix.ProjectName }}\${{ matrix.ProjectName }}.csproj

      - name: Push nuget packages
        run: |
          dotnet nuget push pkg\${{ matrix.PackageId }}*.nupkg -s https://nuget.pkg.github.com/BeyondDimension -k ${{ secrets.RMBADMIN_TOKEN }} --skip-duplicate
          dotnet nuget push pkg\${{ matrix.PackageId }}*.snupkg -s https://nuget.pkg.github.com/BeyondDimension -k ${{ secrets.RMBADMIN_TOKEN }} --skip-duplicate
          dotnet nuget push pkg\${{ matrix.PackageId }}*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate
          dotnet nuget push pkg\${{ matrix.PackageId }}*.snupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Changelog
        uses: glennawatson/ChangeLog@v1
        id: changelog

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.RMBADMIN_TOKEN }}
          body: ${{ steps.changelog.outputs.commitLog }}
          draft: false
          prerelease: false
